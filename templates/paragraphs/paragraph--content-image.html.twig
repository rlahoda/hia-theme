{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% if paragraph.field_hiding_image.value == 1 %}
  {% set hidden = 'uk-visible@s' %}
{% else %}
    {% set hidden = '' %}
{% endif %}

{% if paragraph.field_parallax_image.value == 1 %}
  {% set parallaximage = 'uk-parallax="bgy: -300"' %}
{% else %}
    {% set parallaximage = '' %}
{% endif %}

{% if  paragraph.field_image_alignment.target_id == 10  %}
  {% set imagealign = 'uk-background-top-left' %}
{% elseif  paragraph.field_image_alignment.target_id == 11 %}
  {% set imagealign = 'uk-background-top-center' %}
{% elseif  paragraph.field_image_alignment.target_id == 12 %}
  {% set imagealign = 'uk-background-top-right' %}
{% elseif  paragraph.field_image_alignment.target_id == 14 %}
  {% set imagealign = 'uk-background-center-left' %}
{% elseif  paragraph.field_image_alignment.target_id == 15 %}
  {% set imagealign = 'uk-background-center-right' %}
{% elseif paragraph.field_image_alignment.target_id == 17 %}
  {% set imagealign = 'uk-background-bottom-left' %}
{% elseif paragraph.field_image_alignment.target_id == 16 %}
  {% set imagealign = 'uk-background-bottom-center' %}
{% elseif  paragraph.field_image_alignment.target_id == 18 %}
  {% set imagealign = 'uk-background-bottom-right' %}
{% else %}
  {% set imagealign = 'uk-background-center-center' %}
{% endif %}

{% if paragraph.field_height.target_id == 9 %}
  {% set imageheight = 'uk-height-small' %}
{% elseif paragraph.field_height.target_id == 8 %}
  {% set imageheight = 'uk-height-medium' %}
{% elseif paragraph.field_height.target_id == 7 %}
  {% set imageheight = 'uk-height-large' %}
{% else %}
  {% set imageheight = '' %}
{% endif %}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    hidden,
    'uk-background-cover',
    imagealign,
    imageheight,
  ]
%}
{% block paragraph %}

{#{{ dpm(content.field_image)}}#}
  <div{{ attributes.addClass(classes) }} {{ parallaximage|raw }} role="presentation" style="background-image: url({{ file_url(paragraph.field_image.entity.fileuri) }})">
    {% block content %}

{#{{ dpm(file_url(paragraph.field_image.entity.fileuri))}}#}
{#{{ content.field_image }}#}

    {% endblock %}
  </div>
{% endblock paragraph %}
